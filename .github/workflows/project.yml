# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, when there is a push to the "main" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of the `ECR_REPOSITORY` environment variable in the workflow below with your repository's name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below with your repository's region.
#
# 2. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy to Amazon EKS
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: '1.24.0'
      id: install-kubectl

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: capstone-12
        IMAGE_TAG: 1.2
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker-compose build
        docker tag capstone-12:latest $ECR_REGISTRY/$ECR_REPOSITORY:1.2
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:1.2

    - name: Update Kube config
      run: aws eks update-kubeconfig --name capstone-12 --region eu-west-1

    - name: Deploy to Amazon EKS
      run: |
        kubectl apply -f k8s/deployment.yml
        kubectl apply -f k8s/service.yml
